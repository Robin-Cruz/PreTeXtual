%YAML 1.2
---
name: mwe-debug-pretext
scope: text.xml.pretext.debug
file_extensions:
  - mwe
contexts:
  main:
    - match: '(<)(sage)[^>]*?'
      captures:
        1: punctuation.definition.tag.begin.pretext
        2: entity.name.tag.localname.pretext
        0: meta.tag.pretext markup.other.interactive.pretext
      push:
        - match: '/>'
          scope: punctuation.definition.tag.end.pretext
          pop: true
        - include: tag-stuff
        - match: '>'
          scope: punctuation.definition.tag.end.fake.pretext
          push:
            - match: '(<)(input)[^>]*?(>)'
              captures:
                1: punctuation.definition.tag.begin.pretext
                2: entity.name.tag.localname.pretext
                3: punctuation.definition.tag.end.pretext
                0: meta.tag.pretext
              push:
                - meta_content_scope: source.python.sage.embedded.pretext
                - include: 'scope:source.python'
                - match: '(</)(input)(>)'
                  captures:
                    1: punctuation.definition.tag.begin.pretext
                    2: entity.name.tag.localname.pretext
                    3: punctuation.definition.tag.end.pretext
                    0: meta.tag.pretext
                  pop: true
                  clear_scopes: 1
              with_prototype:
                - match: '<!\[CDATA\['
                  scope: punctuation.definition.string.begin.pretext
                - match: ']]>'
                  scope: punctuation.definition.string.end.pretext
            - match: '(</?)(output)(>)'
              captures:
                1: punctuation.definition.tag.begin.pretext
                2: entity.name.tag.localname.pretext
                3: punctuation.definition.tag.end.pretext
                0: meta.tag.pretext
        - match: '(</)(sage)(>)'
          captures:
            1: punctuation.definition.tag.end.pretext
            2: entity.name.tag.localname.pretext
            3: punctuation.definition.tag.end.pretext
            0: meta.tag.pretext markup.other.interactive.pretext
          pop: true
    # - match: '(<)(sage)[^>]*?(language\s*)(=)(\s*"r")[^>]*?'
    #   captures:
    #     1: punctuation.definition.tag.begin.pretext
    #     2: entity.name.tag.localname.pretext
    #     3: entity.other.attribute-name.namespace.pretext
    #     4: entity.other.attribute-name.pretext punctuation.separator.key-value.pretext
    #     5: entity.other.attribute-name.localname.pretext
    #     0: meta.tag.pretext
    #   push:
    #     - match: '/>'
    #       scope: punctuation.definition.tag.end.pretext
    #       pop: true
    #     - match: '(<)(input)[^>]*?(>)'
    #       captures:
    #         1: punctuation.definition.tag.begin.pretext
    #         2: entity.name.tag.localname.pretext
    #         3: punctuation.definition.tag.end.pretext
    #         0: meta.tag.pretext
    #     - match: '(</?)(output)(>)'
    #       captures:
    #         1: punctuation.definition.tag.begin.pretext
    #         2: entity.name.tag.localname.pretext
    #         3: punctuation.definition.tag.end.pretext
    #         0: meta.tag.pretext
    #     - include: tag-stuff
    #     - match: '>'
    #       scope: punctuation.definition.tag.end.pretext
    #       push:
    #         - meta_content_scope: source.r.embedded.pretext
    #         - include: 'scope:source.r'
    #       with_prototype:
    #         - match: '<!\[CDATA\['
    #           scope: punctuation.definition.string.begin.pretext
    #         - match: ']]>'
    #           scope: punctuation.definition.string.end.pretext
    #         - match: '(</)(input)(>)'
    #           captures:
    #             1: punctuation.definition.tag.begin.pretext
    #             2: entity.name.tag.localname.pretext
    #             3: punctuation.definition.tag.end.pretext
    #             0: meta.tag.pretext
    #           pop: true
    #     - match: '(</)(sage)[^>]*?(>)'
    #       captures:
    #         1: punctuation.definition.tag.end.pretext
    #         2: entity.name.tag.localname.pretext
    #         3: punctuation.definition.tag.end.pretext
    #         0: meta.tag.pretext
    #       pop: true
